{"version":3,"file":"assets/css/page/singlePortfolio.css","mappings":"AAEA;EACI;ACDJ;ACqCI;EACI;EACA;EASI;AD3CZ;AC6CQ;EACI;EACA;EACA;AD3CZ;AC8CQ;EACI,oBArB+D;KAqB/D,iBArB+D;ADvB3E;ADVI;EACI;EACA;ACYR;ADTI;EACI;EACA;EACA;ACWR;ADRI;EACI;ACUR;;AAzBA;EACI;AA4BJ;AA3BI;EACI;EACA;AA6BR;AA3BI;EACI;EACA;EACA;EACA;AA6BR;AA3BI;EACI;EACA;EACA;AA6BR;AA3BI;EACI;EACA;EACA;EACA;EACA;EACA;EACA;AA6BR;AA3BI;EACI;EACA;AA6BR;;ACpBI;EACI;EACA;EASI;ADeZ;ACbQ;EACI;EACA;EACA;ADeZ;ACZQ;EACI,oBArB+D;KAqB/D,iBArB+D;ADmC3E;;AAnCA;EAEI;AAqCJ;ACtCI;EACI;EACA;EASI;ADgCZ;AC9BQ;EACI;EACA;EACA;ADgCZ;AC7BQ;EACI,oBArB+D;KAqB/D,iBArB+D;ADoD3E;AAjDI;EACI;EACA;EACA;EACA;AAmDR;;AA/CA;EACI;EACA;EACA;AAkDJ;AAhDI;EACI;AAkDR;AA/CI;EACI;EACA;EACA,kCEtBM;EFuBN;AAiDR;AA9CI;EACI;EACA;EACA;EACA;AAgDR;AA5CI;EACI;EACA;EACA;AA8CR;AA3CI;EACI;EACA;EACA;EACA;AA6CR;AA1CI;EACI;EACA;EACA;EACA;AA4CR,C","sources":["webpack:///./source/scss/components/cards/_card-portfolioListing.scss","webpack:///./source/scss/pages/singlePortfolio.scss","webpack:///./source/scss/config/_mixin.scss","webpack:///./source/scss/config/_variable.scss"],"sourcesContent":["@use '../../_config.scss' as *;\r\n\r\n.card-portfolioListing{\r\n    position: relative;\r\n    @include imageRatio(647.59,974.66);\r\n    &__image-container{\r\n        border-radius: 40px;\r\n        overflow: hidden;\r\n    }\r\n\r\n    &__title{\r\n        margin-top: 40px;\r\n        font-size: 30px;\r\n        line-height: 1.4;\r\n    }\r\n\r\n    &:nth-child(2n){\r\n        top: 120px;\r\n    }\r\n}","@use '../_config.scss' as *;\r\n@use '../components/cards/_card-portfolioListing.scss' as *;\r\n.portfolio-header{\r\n    padding: 150px 0px;\r\n    &__inner{\r\n        max-width: 80%;\r\n        margin: 0 auto;\r\n    }\r\n    &__title{\r\n        max-width: 60%;\r\n        margin-bottom: 120px;\r\n        font-size: 100px;\r\n        font-weight: 400;\r\n    }\r\n    &__detail{\r\n        display: grid;\r\n        grid-template-columns: repeat(3,1fr);\r\n        gap: 80px;\r\n    }\r\n    &__item-label{\r\n        font-size: 18px;\r\n        text-transform: uppercase;\r\n        color: #969798;\r\n        font-weight: 400;\r\n        margin-bottom: 32px;\r\n        padding-bottom: 32px;\r\n        border-bottom: 1px solid #E0E0E1;\r\n    }\r\n    &__value{\r\n        font-size: 18px;\r\n        color: #2A2B2E;\r\n    }\r\n}\r\n\r\n.portfolio-thumbnail{\r\n    @include imageRatio(1920,1100);\r\n}\r\n\r\n.portfolio-imageFull{\r\n    @include imageRatio(1920,1100);\r\n    position: relative;\r\n    &__title{\r\n        position: absolute;\r\n        opacity: 0;\r\n        visibility: hidden;\r\n        z-index: -1;\r\n    }\r\n}\r\n\r\n.content-listing{\r\n    padding-top: 250px;\r\n    padding-bottom: 300px;\r\n    position: relative;\r\n\r\n    &__header{\r\n        margin-bottom: 80px;\r\n    }\r\n\r\n    &__title{\r\n        font-size: 120px;\r\n        font-weight: 500;\r\n        font-family: $primary-font;\r\n        font-style: italic;\r\n    }\r\n\r\n    &__info-container{\r\n        display: grid;\r\n        grid-template-columns: 1fr 3fr;\r\n        gap: 32px;\r\n        padding-bottom: 180px;\r\n    }\r\n\r\n\r\n    &__subtitle{\r\n        text-transform: uppercase;\r\n        font-size: 20px;\r\n        font-weight: 400;\r\n    }\r\n\r\n    &__info{\r\n        font-weight: 400;\r\n        line-height: 1.3;\r\n        letter-spacing: 0.04em;\r\n        font-size: 30px;\r\n    }\r\n\r\n    &__grid{\r\n        max-width: 80%;\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr;\r\n        gap: 80px;\r\n    }\r\n\r\n}","@use 'sass:math';\r\n@use 'sass:map';\r\n@use '_variable.scss' as *;\r\n@use '_function.scss' as *;\r\n\r\n// |‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾| //\r\n// | tmdrMIX v.1.2.1                         | //\r\n// | last update : 28 / 06 / 2023            | //\r\n// |_________________________________________| //\r\n\r\n// transform with fallback\r\n@mixin transform($declaration) {\r\n    -webkit-transform: #{$declaration};\r\n    -moz-transform: #{$declaration};\r\n    -ms-transform: #{$declaration};\r\n    -o-transform: #{$declaration};\r\n    transform: #{$declaration};\r\n}\r\n\r\n// transition with fallback\r\n@mixin transition($option) {\r\n    -webkit-transition: #{$option};\r\n    -moz-transition: #{$option};\r\n    -ms-transition: #{$option};\r\n    -o-transition: #{$option};\r\n    transition: #{$option};\r\n}\r\n\r\n// display flex with fallback\r\n@mixin displayFlex {\r\n    display: block;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n}\r\n\r\n// make ratio classes\r\n@mixin imageRatio($imageWidth, $imageHeight, $maxWidth: false, $objectFit: cover, $className : 'image') {\r\n    &__#{$className}-container {\r\n        position: relative;\r\n        width: 100%;\r\n        @if ( $maxWidth ) {\r\n            display: inline-block;\r\n            @if ( $maxWidth == true ) {\r\n                max-width: #{$imageWidth}px;\r\n            } @else {\r\n                max-width: #{$maxWidth}px;\r\n            }\r\n        } @else {\r\n            display: block;\r\n        }\r\n        &:before {\r\n            content: \"\";\r\n            display: block;\r\n            padding-top: math.div($imageHeight, $imageWidth) * 100%;\r\n        }\r\n\r\n        .ratio-item {\r\n            object-fit: $objectFit;\r\n        }\r\n    }\r\n}\r\n\r\n// text elypsis mixin\r\n@mixin elypsis($fontName, $fontSize, $lines-to-show: 1, $line-height : 1.4) {\r\n\r\n    display: block; // Fallback for non-webkit\r\n    display: -webkit-box;\r\n    -webkit-box-orient: vertical;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    \r\n    @each $breakpoint, $value in map.get($fontSizes,$fontName,$fontSize) {\r\n        @if ( $breakpoint == 'default' ) {\r\n            $font-size : map.get($fontSizes, $fontName, $fontSize, default, font-size);\r\n            @if ( map.get($fontSizes, $fontName, $fontSize, default, line-height) ) {\r\n                $line-height: map.get($fontSizes, $fontName, $fontSize, default, line-height);\r\n            };\r\n\r\n            height: #{$font-size*$line-height*$lines-to-show}px; // Fallback for non-webkit\r\n            font-size: #{$font-size}px;\r\n            line-height: $line-height;\r\n            -webkit-line-clamp: $lines-to-show;\r\n        }\r\n        @else {\r\n            @media screen and (max-width: #{$breakpoint}px ) {\r\n                $font-size : map.get($fontSizes, $fontName, $fontSize, $breakpoint, font-size);\r\n                @if ( map.get($fontSizes, $fontName, $fontSize, $breakpoint, line-height) ) {\r\n                    $line-height: map.get($fontSizes, $fontName, $fontSize, $breakpoint, line-height);\r\n                };\r\n    \r\n                height: #{$font-size*$line-height*$lines-to-show}px; // Fallback for non-webkit\r\n                font-size: #{$font-size}px;\r\n                line-height: $line-height;\r\n                -webkit-line-clamp: $lines-to-show;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n// element state mixin\r\n@mixin fullState {\r\n    &:hover, &:active, &:focus, &:active:hover, &:active:focus {\r\n        @content;\r\n    }\r\n}\r\n\r\n// responsive Font Size\r\n@mixin fontSize($fontName, $fontSize, $useRem: true) {\r\n    @each $breakpoint, $value in map.get($fontSizes,$fontName,$fontSize) {\r\n        @if ( $breakpoint == 'default' ) {\r\n            @each $property, $value in map.get($fontSizes, $fontName, $fontSize, default) {\r\n                @if ($useRem == true and $property == 'font-size') {\r\n                    font-size: remSize($value);\r\n                }\r\n                @else if ($useRem == false and $property == 'font-size') {\r\n                    font-size: #{$value}px;\r\n                }\r\n                @else {\r\n                    #{$property} : #{$value};\r\n                }\r\n            }\r\n        } \r\n        @else {\r\n            @media screen and (max-width: #{$breakpoint}px ) {\r\n                @each $property, $value in map.get($fontSizes, $fontName, $fontSize, $breakpoint) {\r\n                    @if ($useRem == true and $property == 'font-size') {\r\n                        font-size: remSize($value);\r\n                    }\r\n                    @else if ($useRem == false and $property == 'font-size') {\r\n                        font-size: #{$value}px;\r\n                    }\r\n                    @else {\r\n                        #{$property} : #{$value};\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","@use 'sass:map';\r\n@use 'sass:math';\r\n\r\n$color: (\r\n    red: (\r\n        default: red\r\n    ),\r\n    green: (\r\n        default: green\r\n    ),\r\n    blue: (\r\n        default: blue\r\n    ),\r\n);\r\n\r\n$fontSizes: (\r\n    headline: (\r\n        xl : (\r\n            default: (\r\n                font-size: 80,\r\n                line-height: 2\r\n            ),\r\n            991: (\r\n                font-size: 56,\r\n                line-height: 1.3\r\n            ),\r\n            320: (\r\n                font-size: 36\r\n            )\r\n        ),\r\n        l: (\r\n            default: (\r\n                font-size: 48,\r\n                line-height: 60\r\n            )\r\n        )\r\n    )\r\n);\r\n\r\n$primary-font:'Poppins', sans-serif;\r\n$secondary-font:'Roboto', sans-serif;"],"names":[],"sourceRoot":""}